3.1:
	> db.restaurants.find({ $and: [ { "borough": "Queens" }, { "cuisine": "Chinese" } ] }).count()
	
	728
3.2:
	> db.restaurants.aggregate([ { $project: { "grades.score": 1 }}, { $unwind: "$grades" }, { $sort: { "grades.score": -1 } }, { $limit: 1 } ])
	
	{ "_id" : ObjectId("5a5b188dfa80ef2c6b3cd718"), "grades" : { "score" : 131 } }
3.3:
	> db.restaurants.update({ borough: "Manhattan" }, { $push: { grades: { grade: "A", score: 7, date: ISODate() } } }, { multi: tru })
	
	WriteResult({ "nMatched" : 10259, "nUpserted" : 0, "nModified" : 10259 })
3.4:
	> db.restaurants.find({ $and: [ { "grades.8": { $exists: true } }, { "grades.8.score": { $lt: 7 } } ] }, { name: 1, _id: 0 })
	
	{ "name" : "Silver Krust West Indian Restaurant" }
	{ "name" : "Pure Food" }
3.5:
	> db.restaurants.find({ $and: [ { cuisine: "Seafood" }, { grades: { $elemMatch: { grade: "B", date: { $gte: ISODate("2014-02-01"), $lt: ISODate("2014-03-01") } } } } ] }, { borough: 1 })

	{ "_id" : ObjectId("5a5b188dfa80ef2c6b3d0b22"), "borough" : "Bronx" }
	{ "_id" : ObjectId("5a5b188dfa80ef2c6b3d0da1"), "borough" : "Manhattan" }

--------------------------------------------------------------------------------

4.1:
	> db.restaurants.createIndex({ name: 1 })
	> db.restaurants.find({ name: "Glorious Food" }).explain()

	{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "name" : {
                                "$eq" : "Glorious Food"
                        }
                },
                "winningPlan" : {
                        "stage" : "FETCH",
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "name" : 1
                                },
                                "indexName" : "name_1",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "name" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : false,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "name" : [
                                                "[\"Glorious Food\", \"Glorious Food\"]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-E78CTJ7",
                "port" : 27017,
                "version" : "3.6.2",
                "gitVersion" : "489d177dbd0f0420a8ca04d39fd78d0a2c539420"
        },
        "ok" : 1
    }
4.2:
	> db.restaurants.getIndexes()

	[
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_",
                "ns" : "frontcamp.restaurants"
        },
        {
                "v" : 2,
                "key" : {
                        "name" : 1
                },
                "name" : "name_1",
                "ns" : "frontcamp.restaurants"
        }
    ]

    As we see, our created index has name "name_1":
    > db.restaurants.dropIndex("name_1")

    { "nIndexesWas" : 2, "ok" : 1 }

	Proof the index is removed:
    > db.restaurants.getIndexes()

    [
        {
                "v" : 2,
                "key" : {
                        "_id" : 1
                },
                "name" : "_id_",
                "ns" : "frontcamp.restaurants"
        }
    ]
4.3:
	> db.restaurants.createIndex({ restaurant_id: 1 }, { name: "restaurants_id_index" })
	> db.restaurants.find({ restaurant_id: "41098650" }, { _id: 0, borough: 1 }).explain()

	{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "restaurant_id" : {
                                "$eq" : "41098650"
                        }
                },
                "winningPlan" : {
                        "stage" : "PROJECTION",
                        "transformBy" : {
                                "_id" : 0,
                                "borough" : 1
                        },
                        "inputStage" : {
                                "stage" : "FETCH",
                                "inputStage" : {
                                        "stage" : "IXSCAN",
                                        "keyPattern" : {
                                                "restaurant_id" : 1
                                        },
                                        "indexName" : "restaurants_id_index",
                                        "isMultiKey" : false,
                                        "multiKeyPaths" : {
                                                "restaurant_id" : [ ]
                                        },
                                        "isUnique" : false,
                                        "isSparse" : false,
                                        "isPartial" : false,
                                        "indexVersion" : 2,
                                        "direction" : "forward",
                                        "indexBounds" : {
                                                "restaurant_id" : [
                                                        "[\"41098650\", \"41098650\"]"
                                                ]
                                        }
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-E78CTJ7",
                "port" : 27017,
                "version" : "3.6.2",
                "gitVersion" : "489d177dbd0f0420a8ca04d39fd78d0a2c539420"
        },
        "ok" : 1
    }
4.4:
	> db.restaurants.createIndex({ cuisine: 1 }, { partialFilterExpression: { borough: "Staten Island" }, name: "my_partial_index" })

	> db.restaurants.find({ borough: "Staten Island", cuisine: "American" }).explain()
	{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Staten Island"
                                        }
                                },
                                {
                                        "cuisine" : {
                                                "$eq" : "American"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "FETCH",
                        "filter" : {
                                "borough" : {
                                        "$eq" : "Staten Island"
                                }
                        },
                        "inputStage" : {
                                "stage" : "IXSCAN",
                                "keyPattern" : {
                                        "cuisine" : 1
                                },
                                "indexName" : "my_partial_index",
                                "isMultiKey" : false,
                                "multiKeyPaths" : {
                                        "cuisine" : [ ]
                                },
                                "isUnique" : false,
                                "isSparse" : false,
                                "isPartial" : true,
                                "indexVersion" : 2,
                                "direction" : "forward",
                                "indexBounds" : {
                                        "cuisine" : [
                                                "[\"American\", \"American\"]"
                                        ]
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-E78CTJ7",
                "port" : 27017,
                "version" : "3.6.2",
                "gitVersion" : "489d177dbd0f0420a8ca04d39fd78d0a2c539420"
        },
        "ok" : 1
    }

    > db.restaurants.find({ borough: "Staten Island", name: "Bagel Land" }).explain()
    {
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Staten Island"
                                        }
                                },
                                {
                                        "name" : {
                                                "$eq" : "Bagel Land"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "$and" : [
                                        {
                                                "borough" : {
                                                        "$eq" : "Staten Island"
                                                }
                                        },
                                        {
                                                "name" : {
                                                        "$eq" : "Bagel Land"
                                                }
                                        }
                                ]
                        },
                        "direction" : "forward"
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-E78CTJ7",
                "port" : 27017,
                "version" : "3.6.2",
                "gitVersion" : "489d177dbd0f0420a8ca04d39fd78d0a2c539420"
        },
        "ok" : 1
    }

    > db.restaurants.find({ borough: "Queens", cuisine: "Pizza" }).explain()
    {
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "borough" : {
                                                "$eq" : "Queens"
                                        }
                                },
                                {
                                        "cuisine" : {
                                                "$eq" : "Pizza"
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "COLLSCAN",
                        "filter" : {
                                "$and" : [
                                        {
                                                "borough" : {
                                                        "$eq" : "Queens"
                                                }
                                        },
                                        {
                                                "cuisine" : {
                                                        "$eq" : "Pizza"
                                                }
                                        }
                                ]
                        },
                        "direction" : "forward"
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-E78CTJ7",
                "port" : 27017,
                "version" : "3.6.2",
                "gitVersion" : "489d177dbd0f0420a8ca04d39fd78d0a2c539420"
        },
        "ok" : 1
    }
4.5:
	> db.restaurants.createIndex({ "grades.8.score": 1 }, { partialFilterExpression: { "grades.8": { $exists: true } }, name: "index_for_3.4_task" })

	> db.restaurants.find({ $and: [ { "grades.8": { $exists: true } }, { "grades.8.score": { $lt: 7 } } ] }, { name: 1, _id: 0 }).explain()
	{
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "grades.8.score" : {
                                                "$lt" : 7
                                        }
                                },
                                {
                                        "grades.8" : {
                                                "$exists" : true
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "PROJECTION",
                        "transformBy" : {
                                "name" : 1,
                                "_id" : 0
                        },
                        "inputStage" : {
                                "stage" : "FETCH",
                                "filter" : {
                                        "grades.8" : {
                                                "$exists" : true
                                        }
                                },
                                "inputStage" : {
                                        "stage" : "IXSCAN",
                                        "keyPattern" : {
                                                "grades.8.score" : 1
                                        },
                                        "indexName" : "index_for_3.4_task",
                                        "isMultiKey" : false,
                                        "multiKeyPaths" : {
                                                "grades.8.score" : [ ]
                                        },
                                        "isUnique" : false,
                                        "isSparse" : false,
                                        "isPartial" : true,
                                        "indexVersion" : 2,
                                        "direction" : "forward",
                                        "indexBounds" : {
                                                "grades.8.score" : [
                                                        "[-inf.0, 7.0)"
                                                ]
                                        }
                                }
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-E78CTJ7",
                "port" : 27017,
                "version" : "3.6.2",
                "gitVersion" : "489d177dbd0f0420a8ca04d39fd78d0a2c539420"
        },
        "ok" : 1
    }

    Proof that in other cases the index is not used:
    > db.restaurants.find({ $and: [ { "grades.8": { $exists: true } }, { "grades.8.grade": "A" } ] }, { name: 1, _id: 0 }).explain()
    {
        "queryPlanner" : {
                "plannerVersion" : 1,
                "namespace" : "frontcamp.restaurants",
                "indexFilterSet" : false,
                "parsedQuery" : {
                        "$and" : [
                                {
                                        "grades.8.grade" : {
                                                "$eq" : "A"
                                        }
                                },
                                {
                                        "grades.8" : {
                                                "$exists" : true
                                        }
                                }
                        ]
                },
                "winningPlan" : {
                        "stage" : "PROJECTION",
                        "transformBy" : {
                                "name" : 1,
                                "_id" : 0
                        },
                        "inputStage" : {
                                "stage" : "COLLSCAN",
                                "filter" : {
                                        "$and" : [
                                                {
                                                        "grades.8.grade" : {
                                                                "$eq" : "A"
                                                        }
                                                },
                                                {
                                                        "grades.8" : {
                                                                "$exists" : true
                                                        }
                                                }
                                        ]
                                },
                                "direction" : "forward"
                        }
                },
                "rejectedPlans" : [ ]
        },
        "serverInfo" : {
                "host" : "DESKTOP-E78CTJ7",
                "port" : 27017,
                "version" : "3.6.2",
                "gitVersion" : "489d177dbd0f0420a8ca04d39fd78d0a2c539420"
        },
        "ok" : 1
    }
